---

- name: Install i3 keyring
  apt:
    name: sur5r-keyring
    allow_unauthenticated: yes
    update_cache: yes
    cache_valid_time: 3600
    state: latest
  become: yes

- name: Install Debian packages
  apt:
    name: "{{ item.package }}"
    update_cache: yes
    cache_valid_time: 3600
    state: latest
    install_recommends: no
  become: yes
  with_items:
    - { package: "ruby2.5" }
    - { package: "ruby2.5-dev" }
    - { package: "build-essential" }
    - { package: "git" }
    - { package: "i3" }
    - { package: "i3status" }
    - { package: "suckless-tools" }
    - { package: "redshift-gtk" }
    - { package: "geoclue-2.0" }
    - { package: "gnome-encfs-manager" }
    - { package: "gnome-terminal" }
    - { package: "autossh" }
    - { package: "compton" }
    - { package: "unclutter" }
    - { package: "urlscan" }
    - { package: "mutt" }
    - { package: "docker-ce" }
    - { package: "riot-web" }
    - { package: "numix-gtk-theme" }
    - { package: "numix-icon-theme" }
    - { package: "feh" }
    - { package: "gnupg" }
    - { package: "transmission-gtk" }
    - { package: "neovim" }
    - { package: "unzip" }
    - { package: "dkms" }
    - { package: "virtualbox-5.2" }
    - { package: "pass" }
    - { package: "libdbus-glib-1-dev" }
    - { package: "whois" }
    - { package: "htop" }
    - { package: "mpv" }
    - { package: "i965-va-driver" }
    - { package: "vdpau-va-driver" }
    - { package: "golang-1.9" }
    - { package: "curl" }
    - { package: "jq" }
    - { package: "network-manager-openvpn-gnome" }
    - { package: "network-manager-openconnect-gnome" }
    - { package: "unrar" }
    - { package: "w3m" }
    - { package: "yarn" }
    - { package: "gimp" }
    - { package: "slack-desktop" }
    - { package: "pinentry-curses" }
    - { package: "libsecret-1-dev" }
    - { package: "azure-cli" }
    - { package: "exuberant-ctags" }
    - { package: "nodejs" }
    - { package: "keepassx" }
    - { package: "mosh" }
    - { package: "signal-desktop" }
    - { package: "xclip" }
    - { package: "silversearcher-ag" }
    - { package: "pulseaudio-module-bluetooth" }
    - { package: "shellcheck" }

- name: Install libsecret git helper
  command: make
  become: True
  args:
    chdir: /usr/share/doc/git/contrib/credential/libsecret/
    creates: /usr/share/doc/git/contrib/credential/libsecret/git-credential-libsecret

- stat:
    path: /usr/bin/google-chrome
  register: google

- name: Install Google Chrome
  apt: deb=https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  become: yes

- name: Install Microsoft Core Fonts
  apt: deb=http://ftp.debian.org/debian/pool/contrib/m/msttcorefonts/ttf-mscorefonts-installer_3.7_all.deb
  become: yes

- name: Install gopass
  apt: deb=https://github.com/justwatchcom/gopass/releases/download/v{{ gopass_version }}/gopass-{{ gopass_version }}-linux-amd64.deb
  become: yes

- name: Install Mattermost
  apt: deb=https://releases.mattermost.com/desktop/{{ mattermost_version }}/mattermost-desktop-{{ mattermost_version }}-linux-amd64.deb
  become: yes

- name: Install ctop
  get_url:
    url: https://github.com/bcicen/ctop/releases/download/v{{ ctop_version }}/ctop-{{ ctop_version }}-linux-amd64
    dest: "{{ ansible_env.HOME }}/.local/bin/ctop"
    checksum: "sha256:5313c4e2f98639cce53545762f0b65f3db977ae764a9acb2fb15928713b8cde0"
    mode: 0755

- name: Remove Debian packages
  apt:
    name: "{{ item.package }}"
    purge: yes
    state: absent
  become: yes
  with_items:
    - { package: "thunderbird" }
    - { package: "pidgin" }
    - { package: "apport-gtk" }

      # - name: Install Python packages
      #   pip:
      #     name: "{{ item.package }}"
      #     extra_args: --user
      #     state: latest
      #   with_items:
      #     - { package: "setuptools" }
      #     - { package: "keyring" }
      #     - { package: "awscli" }
      #     - { package: "streamlink" }
      #     - { package: "neovim" }
      #     - { package: "secretstorage" }
      #     - { package: "dbus-python" }
      #     - { package: "flake8" }
      #     - { package: "msgpack-python" }
      #     - { package: "python-language-server" }

- name: Install pip3
  apt:
    name: python3-pip
    update_cache: yes
    cache_valid_time: 3600
    state: latest
    install_recommends: no
  become: yes

- name: Install Python3 packages
  pip:
    name: "{{ item.package }}"
    extra_args: --user
    state: latest
    executable: /usr/bin/pip3
  with_items:
    - { package: "neovim" }

- name: Install awstools
  get_url:
    url: "https://github.com/sam701/awstools/releases/download/{{ awstools_version }}/awstools_linux_amd64"
    dest: "{{ ansible_env.HOME }}/.local/bin/awstools"
    sha256sum: c336f25889a55791f62fdef7ca034caad48be5d49745075138c7969fc38d1793
    mode: 0755

- name: Install minishift
  unarchive:
    src: "https://github.com/minishift/minishift/releases/download/v{{ minishift_version }}/minishift-{{ minishift_version }}-linux-amd64.tgz"
    dest: "{{ ansible_env.HOME }}/.local/bin/"
    remote_src: True
    creates: "{{ ansible_env.HOME }}/.local/bin/minishift"

- name: Install minikube
  get_url:
    url: "https://github.com/kubernetes/minikube/releases/download/v{{ minikube_version }}/minikube-linux-amd64"
    dest: "{{ ansible_env.HOME }}/.local/bin/minikube"
    sha256sum: 1261de09386fd1f4ee7a4645958757c2c9e69f419a2a4ca8aff475017a7e036e
    mode: 0755

- name: Install OpenShift client
  unarchive:
    src: "https://github.com/openshift/origin/releases/download/v{{ openshift_cli_version }}/openshift-origin-client-tools-v{{ openshift_cli_version }}-7b451fc-linux-64bit.tar.gz"
    dest: "{{ ansible_env.HOME }}/.local/bin/"
    exclude:
      - "*/LICENSE"
      - "*/README.md"
    extra_opts: "--strip-components=1"
    remote_src: True
    creates: "{{ ansible_env.HOME }}/.local/bin/oc"

- name: Install Hugo
  apt: "deb=https://github.com/gohugoio/hugo/releases/download/v{{ hugo_version }}/hugo_{{ hugo_version }}_Linux-64bit.deb"
  become: yes

- name: Ruby alternative
  become: yes
  alternatives:
    name: ruby
    link: /usr/bin/ruby
    path: /usr/bin/ruby2.5

- name: Gem alternative
  become: yes
  alternatives:
    name: gem
    link: /usr/bin/gem
    path: /usr/bin/gem2.5

- name: vim alternative
  become: yes
  alternatives:
    name: vim
    link: /usr/bin/vim
    path: /usr/bin/nvim

- name: pinentry alternative
  become: yes
  alternatives:
    name: pinentry
    link: /usr/bin/pinentry
    path: /usr/bin/pinentry-curses

- name: nodejs alternative
  become: yes
  alternatives:
    name: node
    link: /usr/bin/node
    path: /usr/bin/nodejs

- name: Install Rubygems
  gem:
    name: "{{ item.package }}"
    user_install: no
  become: yes
  with_items:
    - { package: "bundler" }
    - { package: "neovim" }
    - { package: "ohai" }

- name: Install local Rubygems
  gem:
    name: "{{ item.package }}"
    user_install: yes
  with_items:
    - { package: "rubocop" }

- name: Install rustup-init
  get_url:
    url: "https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init"
    dest: "/tmp/rustup-init"
    mode: 0755
  register: download_rustup_init

- name: Install rustup
  command: /tmp/rustup-init -y --no-modify-path
  args:
    creates: "{{ansible_env.HOME}}/.cargo/bin/rustup"
  when: download_rustup_init|succeeded
  register: rustup_installed

- name: Remove rustup-init
  file:
    path: /tmp/rustup-init
    state: absent
  when: rustup_installed|succeeded

- include: hashicorp.yml
- include: docker.yml
- include: golang.yml
